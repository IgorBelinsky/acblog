name: Release

on:
  release:
    types: [released]

defaults:
  run:
    shell: pwsh

env:
  dotnet-version: "5.0.x"
  node-version: "12.x"
  build_version: "0.0.4"

jobs:
  pub-images:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node-version }}
    - name: Setup psake
      run: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted; Install-Module -Name psake
    - name: CD Build
      run: Invoke-psake cd-build
    - name: Publish packages
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
      run: Invoke-psake deploy-packages-release
    - name: Upload package artifacts
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ./packages
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wasm
        path: ./src/client/AcBlog.Client.WebAssembly/publish
    - name: Push Client.WebAssembly image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: acblog/wasm
        tag_with_ref: true
        dockerfile: ./src/client/AcBlog.Client.WebAssembly/Dockerfile
    - name: Push Client.WebAssembly.Host image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: acblog/wasm-host
        tag_with_ref: true
        dockerfile: ./src/client/AcBlog.Client.WebAssembly.Host/Dockerfile
    - name: Push Client.Server image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: acblog/client
        tag_with_ref: true
        dockerfile: ./src/client/AcBlog.Client.Server/Dockerfile
    - name: Push Server.Api image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: acblog/api
        tag_with_ref: true
        dockerfile: ./src/AcBlog.Server.Api/Dockerfile
    - name: Mirror Client.WebAssembly image
      uses: docker/build-push-action@v1
      with:
        username: StardustDL
        password: ${{ secrets.PA_TOKEN }}
        registry: docker.pkg.github.com
        repository: acblog/acblog/wasm
        tag_with_ref: true
        dockerfile: ./src/client/AcBlog.Client.WebAssembly/Dockerfile
    - name: Mirror Client.WebAssembly.Host image
      uses: docker/build-push-action@v1
      with:
        username: StardustDL
        password: ${{ secrets.PA_TOKEN }}
        registry: docker.pkg.github.com
        repository: acblog/acblog/wasm-host
        tag_with_ref: true
        dockerfile: ./src/client/AcBlog.Client.WebAssembly.Host/Dockerfile
    - name: Mirror Client.Server image
      uses: docker/build-push-action@v1
      with:
        username: StardustDL
        password: ${{ secrets.PA_TOKEN }}
        registry: docker.pkg.github.com
        repository: acblog/acblog/client
        tag_with_ref: true
        dockerfile: ./src/client/AcBlog.Client.Server/Dockerfile
    - name: Mirror Server.Api image
      uses: docker/build-push-action@v1
      with:
        username: StardustDL
        password: ${{ secrets.PA_TOKEN }}
        registry: docker.pkg.github.com
        repository: acblog/acblog/api
        tag_with_ref: true
        dockerfile: ./src/AcBlog.Server.Api/Dockerfile