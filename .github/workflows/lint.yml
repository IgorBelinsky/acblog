name: Lint

on:
  push:
  pull_request:
  schedule:
    - cron: '0 15 * * 1'

defaults:
  run:
    shell: pwsh

env:
  dotnet-version: "5.0.x"
  node-version: "12.x"

jobs:
  lint:
    runs-on: ubuntu-latest
    # continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: docker://github/super-linter:v3
        env:
          VALIDATE_DOCKERFILE: false
          VALIDATE_DOCKERFILE_HADOLINT: false
          VALIDATE_JSON: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  analyse:
    runs-on: ubuntu-latest
    # continue-on-error: true
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      # Override language selection by uncommenting this and choosing your languages
      # with:
      #   languages: go, javascript, csharp, python, cpp, java

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    # - name: Autobuild
    #   uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Setup psake
      run: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted; Install-Module -Name psake
    - name: Build
      env:
        build_version: 0.0.1-preview
      run: Invoke-psake build-dotnet
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
