@inject IBlogService Service
@inject IClientUrlGenerator UrlGenerator

<Loader OnLoad="@OnLoad" AutoLoad="@true" @ref="loader" UseSkeleton>
    <AntListItem @key="@Id">
        <AntListItemMeta Avatar="@("")">
            <Title>
                <h4>
                    @if (ShowType)
                    {
                        switch (Post.Type)
                        {
                            case PostType.Article:
                                <MdiIcon Type="@IconNames.Articles" />
                                break;
                            case PostType.Slides:
                                <MdiIcon Type="@IconNames.Slides" />
                                break;
                            case PostType.Note:
                                <MdiIcon Type="@IconNames.Notes" />
                                break;
                            default:
                                break;
                        }
                    }
                    <a href="@UrlGenerator.Post(Post)" style="color:black">
                        <span>@Post.Title</span>
                    </a>
                </h4>
                <div>
                    <PostMetadataDisplay Value="@Post" />
                </div>
            </Title>
        </AntListItemMeta>
        @if (!IsProtected)
        {
            <p>
                <DocumentPreviewDisplay Document="@Post.Content" />
            </p>
        }
        else
        {
            <p>Protected Post</p>
        }
    </AntListItem>
</Loader>

@code {
    [Parameter]
    public bool ShowType { get; set; } = false;

    [Parameter]
    public string Id { get; set; }

    private Post Post { get; set; }

    private bool IsProtected { get; set; } = false;

    private Loader loader;

    protected override async Task OnParametersSetAsync()
    {
        if (loader is not null)
        {
            await loader.Load();
        }
    }

    private async Task OnLoad()
    {
        Post = null;
        IsProtected = false;

        Post = await Service.PostService.Get(Id);
        IsProtected = await Service.PostService.Protector.IsProtected(Post.Content);
    }
}
