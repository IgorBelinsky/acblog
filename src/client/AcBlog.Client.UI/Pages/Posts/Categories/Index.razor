@page "/categories"
@inherits BaseCategoryPage

<PageContainer Title="Categories" PageTitle="@Title">
    <Breadcrumb>
        <Breadcrumb>
            <BreadcrumbItem>
                <a href="">
                    <MdiIcon Type="@IconNames.Home" />
                    <span>Home</span>
                </a>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <span>
                    <MdiIcon Type="@IconNames.Category" />
                    <span>Categories</span>
                </span>
            </BreadcrumbItem>
        </Breadcrumb>
    </Breadcrumb>
    <ChildContent>
        <Loader OnLoad="@OnLoad" @ref="loader">
            <div>
                <Tree Nodes="TreeNodes">
                </Tree>
            </div>
        </Loader>
    </ChildContent>
</PageContainer>

@code {
    private CategoryTree Data;

    private List<TreeNode> TreeNodes { get; set; } = new List<TreeNode>();

    private Loader loader;

    private async Task OnLoad()
    {
        Data = await Service.PostService.GetCategories();
        foreach (var v in Data.Root.Children.Values)
        {
            TreeNodes.Add(BuildTreeNode(v));
        }
    }

    TreeNode BuildTreeNode(CategoryTree.CategoryTreeNode node)
    {
        TreeNode result = new TreeNode
        {
            // Text = node.Category.OneNameOrDefault(),
            // Key = node.Category.ToString(),
            NodeTemplate = ctx =>
    @<Template>
        <span style="font-size: 18px;" class="m-1">
            <MdiIcon Type="@IconNames.Category" />
            <a href="@UrlGenerator.Category(node.Category)">@node.Category.OneNameOrDefault()</a>
        </span>
    </Template>,
 IsExpanded = true,
};
foreach (var v in node.Children.Values)
{
 result.Nodes.Add(BuildTreeNode(v));
}
return result;
}
}
