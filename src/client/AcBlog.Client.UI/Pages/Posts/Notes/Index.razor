@page "/notes"
@page "/notes/pages"
@page "/notes/pages/{pageNumber:int}"
@inherits BaseNotePage
@inject AcBlog.Services.Filters.PostNoteFilter Notes

<PageContainer Title="Notes" PageTitle="@Title">
    <Breadcrumb>
        <Breadcrumb>
            <BreadcrumbItem>
                <a href="">
                    <MdiIcon Type="@IconNames.Home" />
                    <span>Home</span>
                </a>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <a href="@UrlGenerator.Posts()">
                    <MdiIcon Type="@IconNames.Posts" />
                    <span>Posts</span>
                </a>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <span>
                    <MdiIcon Type="@IconNames.Notes" />
                    <span>Notes</span>
                </span>
            </BreadcrumbItem>
        </Breadcrumb>
    </Breadcrumb>
    <Extra>
        <AuthorizeView>
            <Authorized>
                <ButtonLink Href="@($"posts/create/note")">
                    <MdiIcon Type="@IconNames.Create"></MdiIcon>
                    <span>Create</span>
                </ButtonLink>
            </Authorized>
        </AuthorizeView>
    </Extra>

    <ChildContent>
        <Loader OnLoad="@OnLoad" LoadKey="@($"{PageNumber}")" @ref="loader">
            <PagingList Data="@Data" Column="1" PageNavigationUrl="@UrlGenerator.Notes()">
                <ItemTemplate>
                    <PostListItem Id="@context"></PostListItem>
                </ItemTemplate>
            </PagingList>
        </Loader>
    </ChildContent>
</PageContainer>

@code {
    const int PageSize = 10;

    PagingData<string> Data { get; set; }

    [Parameter]
    public int? PageNumber { get; set; } = null;

    private Loader loader;

    private async Task OnLoad()
    {
        Title = "Loading...";
        Data = await Notes.Filter(new Data.Models.Actions.Pagination
        {
            CurrentPage = PageNumber ?? 0,
            PageSize = PageSize
        }, QueryTimeOrder.CreationTimeDescending);
        Title = $"Page {Data.CurrentPage.CurrentPage + 1}";
    }
}
