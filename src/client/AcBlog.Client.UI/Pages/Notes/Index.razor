@page "/notes"
@page "/notes/pages"
@page "/notes/pages/{pageNumber:int}"
@inherits BaseNotePage
@inject AcBlog.Services.Filters.PostNoteFilter Notes

<Microsoft.AspNetCore.Components.Web.Extensions.Head.Title Value="@Title"></Microsoft.AspNetCore.Components.Web.Extensions.Head.Title>

<PageHeader>
    <PageHeaderTitle>Notes</PageHeaderTitle>
    <PageHeaderBreadcrumb>
        <Breadcrumb>
            <BreadcrumbItem>
                <a href="">
                    <MdiIcon Type="home" />
                    <span>Home</span>
                </a>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <a href="@UrlGenerator.Posts()">
                    <MdiIcon Type="post" />
                    <span>Posts</span>
                </a>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <span>
                    <MdiIcon Type="file-document" />
                    <span>Notes</span>
                </span>
            </BreadcrumbItem>
        </Breadcrumb>
    </PageHeaderBreadcrumb>
    <PageHeaderExtra>
        <AuthorizeView>
            <Authorized>
                <div class="btn-group-toggle mx-auto" role="group">
                    <a class="btn btn-success mdi mdi-plus" href="posts/new">Create</a>
                </div>
            </Authorized>
        </AuthorizeView>
    </PageHeaderExtra>
</PageHeader>

<div class="container">
    <Loader OnLoad="@OnLoad" LoadKey="@($"{PageNumber}")" @ref="loader">
        <PagingList Data="@Data" Column="1" PageNavigationUrl="@UrlGenerator.Notes()">
            <ItemTemplate>
                <PostListItem Id="@context"></PostListItem>
            </ItemTemplate>
        </PagingList>
    </Loader>
</div>

@code {
    const int PageSize = 10;

    PagingData<string> Data { get; set; }

    [Parameter]
    public int? PageNumber { get; set; } = null;

    private Loader loader;

    private async Task OnLoad()
    {
        Title = "Loading...";
        Data = await Notes.Filter(new Data.Models.Actions.Pagination
        {
            CurrentPage = PageNumber ?? 0,
            PageSize = PageSize
        });
        Title = $"Page {Data.CurrentPage.CurrentPage + 1}";
    }
}
